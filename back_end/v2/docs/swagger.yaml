basePath: /
definitions:
  dto.EmployeeInsertResult:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Employee'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Employee'
        type: array
    type: object
  dto.EmployeeList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Employee'
        type: array
    type: object
  dto.EmployeeUpdateRequest:
    properties:
      account:
        type: string
      id:
        type: integer
      level:
        type: integer
      msg:
        type: string
      name:
        type: string
      new_password:
        type: string
      note:
        type: string
      password:
        type: string
      salary:
        type: number
      tel:
        type: string
    type: object
  dto.ProducerInsertResponseDto:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Producer'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Producer'
        type: array
    type: object
  dto.ProducerList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Producer'
        type: array
    type: object
  dto.ProductInsertResponse:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  dto.ProductList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.Employee:
    properties:
      account:
        type: string
      id:
        type: integer
      level:
        type: integer
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      password:
        type: string
      salary:
        type: number
      tel:
        type: string
    type: object
  models.Producer:
    properties:
      address:
        type: string
      contact_name:
        type: string
      contact_tel:
        type: string
      email:
        type: string
      id:
        type: integer
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      short_name:
        type: string
      tel:
        type: string
    type: object
  models.Product:
    properties:
      id:
        type: integer
      introduction:
        type: string
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      price:
        type: number
      producer_id:
        type: integer
    type: object
host: localhost:4000
info:
  contact: {}
  description: 没有描述
  title: 超市进销存系统--数据库课设接口文档
  version: "1.0"
paths:
  /employee/delete:
    post:
      consumes:
      - application/json
      description: 验证账号密码，然后删除用户
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功或失败
          schema:
            type: msg
      summary: 删除用户
      tags:
      - employee
  /employee/insert:
    post:
      consumes:
      - application/json
      description: 批量导入用户，并且返回成功失败列表
      parameters:
      - description: Request
        in: body
        name: list
        required: true
        schema:
          $ref: '#/definitions/dto.EmployeeList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EmployeeInsertResult'
      summary: 批量导入用户
      tags:
      - employee
  /employee/login:
    post:
      consumes:
      - application/json
      description: 验证账号密码
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功或失败
          schema:
            type: msg
      summary: 用户登录
      tags:
      - employee
  /employee/update:
    post:
      consumes:
      - application/json
      description: 验证账号密码，然后把密码改为新密码
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/dto.EmployeeUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功或失败
          schema:
            type: msg
      summary: 用户修改信息
      tags:
      - employee
  /producer/delete:
    post:
      consumes:
      - application/json
      description: 删除供应商，返回外键检查结果和删除结果，如果有外键依赖则会提示
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Producer'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 删除供应商
      tags:
      - producer
  /producer/insert:
    post:
      consumes:
      - application/json
      description: 批量导入供应商，并且返回成功失败列表
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProducerList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProducerInsertResponseDto'
      summary: 批量导入供应商
      tags:
      - producer
  /producer/select:
    post:
      consumes:
      - application/json
      description: 删除供应商，返回外键检查结果和删除结果，如果有外键依赖则会提示
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProducerList'
      summary: 请求所有供应商
      tags:
      - producer
  /producer/update:
    post:
      consumes:
      - application/json
      description: 更新供应商，除了id之外都能改，所有不会有外键冲突
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Producer'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 更新供应商
      tags:
      - producer
  /product/delete:
    post:
      consumes:
      - application/json
      description: 删除产品，返回外键检查结果和删除结果，如果有外键依赖则会提示
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 删除产品
      tags:
      - product
  /product/insert:
    post:
      consumes:
      - application/json
      description: 批量导入产品，并且返回成功失败列表
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductInsertResponse'
      summary: 批量导入产品
      tags:
      - product
  /product/select:
    post:
      consumes:
      - application/json
      description: 删除产品，返回外键检查结果和删除结果，如果有外键依赖则会提示
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductList'
      summary: 请求所有产品
      tags:
      - product
  /product/update:
    post:
      consumes:
      - application/json
      description: 更新产品，除了id之外都能改，所有不会有外键冲突
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 更新产品
      tags:
      - product
swagger: "2.0"
