basePath: /
definitions:
  dto.DeleteEmployeeByAdminRequest:
    properties:
      operator:
        $ref: '#/definitions/models.Employee'
      target:
        $ref: '#/definitions/models.Employee'
    type: object
  dto.DetailInsertResponse:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
    type: object
  dto.DetailList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Detail'
        type: array
    type: object
  dto.EmployeeInsertResult:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Employee'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Employee'
        type: array
    type: object
  dto.EmployeeList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Employee'
        type: array
    type: object
  dto.EmployeeLoginResponse:
    properties:
      account:
        type: string
      email:
        type: string
      email_is_auth:
        type: boolean
      id:
        type: integer
      level:
        type: integer
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      password:
        type: string
      salary:
        type: number
      tel:
        type: string
      token:
        type: string
    type: object
  dto.EmployeeUpdateRequest:
    properties:
      account:
        type: string
      email:
        type: string
      email_is_auth:
        type: boolean
      id:
        type: integer
      level:
        type: integer
      msg:
        type: string
      name:
        type: string
      new_password:
        type: string
      note:
        type: string
      password:
        type: string
      salary:
        type: number
      tel:
        type: string
    type: object
  dto.OrderInsertResponse:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Order'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  dto.OrderList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  dto.ProducerInsertResponseDto:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Producer'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Producer'
        type: array
    type: object
  dto.ProducerList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Producer'
        type: array
    type: object
  dto.ProductInsertResponse:
    properties:
      fail_list:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      success_list:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  dto.ProductList:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  dto.SumGroupByProductId:
    properties:
      id:
        type: integer
      sum:
        type: integer
    type: object
  dto.SumGroupByProductIdList:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.SumGroupByProductId'
        type: array
    type: object
  models.Detail:
    properties:
      id:
        type: integer
      list_id:
        type: integer
      msg:
        type: string
      note:
        type: string
      product_id:
        type: integer
      quantity:
        type: integer
      total_price:
        type: number
    type: object
  models.Employee:
    properties:
      account:
        type: string
      email:
        type: string
      email_is_auth:
        type: boolean
      id:
        type: integer
      level:
        type: integer
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      password:
        type: string
      salary:
        type: number
      tel:
        type: string
    type: object
  models.Order:
    properties:
      employee_id:
        type: integer
      id:
        type: integer
      msg:
        type: string
      note:
        type: string
      quantity:
        type: integer
      time:
        type: string
      total_price:
        type: number
    type: object
  models.Producer:
    properties:
      address:
        type: string
      contact_name:
        type: string
      contact_tel:
        type: string
      email:
        type: string
      id:
        type: integer
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      short_name:
        type: string
      tel:
        type: string
    type: object
  models.Product:
    properties:
      id:
        type: integer
      introduction:
        type: string
      msg:
        type: string
      name:
        type: string
      note:
        type: string
      price:
        type: number
      producer_id:
        type: integer
    type: object
host: localhost:4000
info:
  contact: {}
  description: 没有描述
  title: 超市进销存系统--数据库课设接口文档
  version: "1.0"
paths:
  /detail/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过id请求详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 通过id请求详情
      tags:
      - detail
  /detail/delete:
    post:
      consumes:
      - application/json
      description: 删除订单详情，返回外键检查结果和删除结果，如果有外键依赖则会提示
      parameters:
      - description: Detail Request
        in: body
        name: detail
        required: true
        schema:
          $ref: '#/definitions/models.Detail'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 删除订单详情
      tags:
      - detail
  /detail/groupByproduct:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 按照商品，统计每种商品卖出去多少个
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SumGroupByProductIdList'
      summary: 按照商品，统计每种商品卖出去多少个
      tags:
      - detail
  /detail/insert:
    post:
      consumes:
      - application/json
      description: 批量导入订单详情，并且返回成功失败列表
      parameters:
      - description: Detail Request
        in: body
        name: list
        required: true
        schema:
          $ref: '#/definitions/dto.DetailList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DetailInsertResponse'
      summary: 批量导入订单详情
      tags:
      - detail
  /detail/orderId/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过订单id请求订单详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DetailList'
      summary: 通过订单id请求订单详情
      tags:
      - detail
  /detail/select:
    post:
      consumes:
      - application/json
      description: 请求所有订单详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DetailList'
      summary: 请求所有订单详情
      tags:
      - detail
  /detail/update:
    post:
      consumes:
      - application/json
      description: 更新产品，除了id之外都能改，所有不会有外键冲突
      parameters:
      - description: Detail Request
        in: body
        name: detail
        required: true
        schema:
          $ref: '#/definitions/models.Detail'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 更新订单详情
      tags:
      - detail
  /employee/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过id请求详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 通过id请求详情
      tags:
      - employee
  /employee/delete:
    post:
      consumes:
      - application/json
      description: 验证账号密码，然后删除用户
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功或失败
          schema:
            type: msg
      summary: 删除用户
      tags:
      - employee
  /employee/deleteByAdmin:
    post:
      consumes:
      - application/json
      description: 需要操作者id，操作对象id，如果操作者不存在，操作对象不存在，操作权限不足都会返回对应错误
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteEmployeeByAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            type: string
      summary: 管理员删除其他用户
      tags:
      - employee
  /employee/getAll:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有员工
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
      summary: 得到所有员工
      tags:
      - employee
  /employee/insert:
    post:
      consumes:
      - application/json
      description: 批量导入用户，并且返回成功失败列表
      parameters:
      - description: Request
        in: body
        name: list
        required: true
        schema:
          $ref: '#/definitions/dto.EmployeeList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EmployeeInsertResult'
      summary: 批量导入用户
      tags:
      - employee
  /employee/login:
    post:
      consumes:
      - application/json
      description: 验证账号密码
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EmployeeLoginResponse'
      summary: 用户登录
      tags:
      - employee
  /employee/update:
    post:
      consumes:
      - application/json
      description: 验证账号密码，然后把密码改为新密码
      parameters:
      - description: Request
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/dto.EmployeeUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功或失败
          schema:
            type: msg
      summary: 用户修改信息
      tags:
      - employee
  /order/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过id请求详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 通过id请求详情
      tags:
      - order
  /order/byEmployeeId/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过员工id请求订单
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderList'
      summary: 通过员工id请求订单
      tags:
      - order
  /order/delete:
    post:
      consumes:
      - application/json
      description: 删除订单，返回外键检查结果和删除结果，如果有外键依赖则会提示
      parameters:
      - description: Order Request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 删除订单
      tags:
      - order
  /order/insert:
    post:
      consumes:
      - application/json
      description: 批量导入订单，并且返回成功失败列表
      parameters:
      - description: Order Request
        in: body
        name: list
        required: true
        schema:
          $ref: '#/definitions/dto.OrderList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderInsertResponse'
      summary: 批量导入订单
      tags:
      - order
  /order/select:
    post:
      consumes:
      - application/json
      description: 请求所有订单
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderList'
      summary: 请求所有订单
      tags:
      - order
  /order/update:
    post:
      consumes:
      - application/json
      description: 更新产品，除了id之外都能改，所有不会有外键冲突
      parameters:
      - description: Order Request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 更新订单
      tags:
      - order
  /producer/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过id请求详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 通过id请求详情
      tags:
      - producer
  /producer/delete:
    post:
      consumes:
      - application/json
      description: 删除供应商，返回外键检查结果和删除结果，如果有外键依赖则会提示
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Producer'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 删除供应商
      tags:
      - producer
  /producer/insert:
    post:
      consumes:
      - application/json
      description: 批量导入供应商，并且返回成功失败列表
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProducerList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProducerInsertResponseDto'
      summary: 批量导入供应商
      tags:
      - producer
  /producer/select:
    post:
      consumes:
      - application/json
      description: 删除供应商，返回外键检查结果和删除结果，如果有外键依赖则会提示
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProducerList'
      summary: 请求所有供应商
      tags:
      - producer
  /producer/update:
    post:
      consumes:
      - application/json
      description: 更新供应商，除了id之外都能改，所有不会有外键冲突
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Producer'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 更新供应商
      tags:
      - producer
  /product/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 通过id请求详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 通过id请求详情
      tags:
      - product
  /product/delete:
    post:
      consumes:
      - application/json
      description: 删除产品，返回外键检查结果和删除结果，如果有外键依赖则会提示
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 删除产品
      tags:
      - product
  /product/insert:
    post:
      consumes:
      - application/json
      description: 批量导入产品，并且返回成功失败列表
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductInsertResponse'
      summary: 批量导入产品
      tags:
      - product
  /product/select:
    post:
      consumes:
      - application/json
      description: 删除产品，返回外键检查结果和删除结果，如果有外键依赖则会提示
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductList'
      summary: 请求所有产品
      tags:
      - product
  /product/update:
    post:
      consumes:
      - application/json
      description: 更新产品，除了id之外都能改，所有不会有外键冲突
      parameters:
      - description: Producer Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            type: string
      summary: 更新产品
      tags:
      - product
swagger: "2.0"
